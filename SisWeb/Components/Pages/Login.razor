@page "/login"
@inject IUriHelper uriHelper
@inject SisWeb.Services.Authentication.IUserService userService
@inject SisWeb.Services.Session.ISessionHelper session

<div class='col-12'>
    <div class="page-title">
        <div class="float-left">
            <h5 class="title">Login</h5>
        </div>
    </div>
</div>

<div class="container">
    <div class="d-flex justify-content-center h-150">
        <div class="card">
            <article class="card-body">

                <h4 class="card-title mb-4 mt-1">Sign in</h4>

                <div class="form-group">
                    <label>Přihlašovací jméno</label>
                    <input id="username" name="" value=@username class="form-control" placeholder="username" onchange=@OnUsernameChanged type="text" />
                </div>

                <div class="form-group">
                    <label>Heslo</label>
                    <input class="form-control" value=@password placeholder="******" type="password" onchange=@OnPasswordChanged />
                </div>

                <div class="form-group">
                    <button onclick=@LoginUser class="btn btn-primary btn-block"> Login  </button>
                </div>

                <div class="form-group">
                    <strong>@message</strong>
                </div>

            </article>
        </div>
    </div>
</div>


@functions {
    string username { get; set; } = "";
    string password { get; set; } = "";
    string message { get; set; } = "";

    void OnUsernameChanged(UIChangeEventArgs changeEvent)
    {
        username = (string)changeEvent.Value;
    }

    void OnPasswordChanged(UIChangeEventArgs changeEvent)
    {
        password = (string)changeEvent.Value;
    }

    async void LoginUser()
    {
        var result = await userService.LoginUser(username, password, true);

        if (result.IsAuthentized)
        {
            session.AuthInformation.Username = username;
            session.AuthInformation.Password = password;
            session.AuthInformation.IsAuthentized = true;
            session.AuthInformation.Email = result.Email;
            session.AuthInformation.FirstName = result.FirstName;
            session.AuthInformation.Lastname = result.Lastname;
            session.AuthInformation.Tel = result.Tel;
            session.BaseUri = uriHelper.GetBaseUri().TrimEnd('/');

            // Load localities
            session.Localities = await userService.GetUserLocalities(session.AuthInformation.Username, session.AuthInformation.Password, true);

            uriHelper.NavigateTo("/");
        }
        else
        {
            message = "Chybné uživatelské jméno nebo heslo";
            StateHasChanged();
        }
    }
}
